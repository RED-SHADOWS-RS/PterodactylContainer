# Â© Copyright RED SHADOWS | RS - Shadow-x78

name: Build Container Images

on:
  workflow_dispatch:
  push:
    branches: [main]
    tags: ["v*"]
  release:
    types: [published]

env:
  SHOULD_PUSH: ${{ github.event_name == 'release' || github.event_name == 'push' }}

jobs:
  build-java:
    name: Build Java Images
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'release' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    strategy:
      matrix:
        version: [v8, v11, v17, v21]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Build Java ${{ matrix.version }}
        uses: docker/build-push-action@v5
        with:
          context: ./src/generic/java
          file: ./src/generic/java/${{ matrix.version }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          tags: pterodactyl-java:${{ matrix.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-nodejs:
    name: Build Node.js Images
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'release' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    strategy:
      matrix:
        version: [v18, v20, v22]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Build Node.js ${{ matrix.version }}
        uses: docker/build-push-action@v5
        with:
          context: ./src/generic/nodejs
          file: ./src/generic/nodejs/${{ matrix.version }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          tags: pterodactyl-nodejs:${{ matrix.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-python:
    name: Build Python Images
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'release' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    strategy:
      matrix:
        version: [v3.9, v3.10, v3.11, v3.12]
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Build Python ${{ matrix.version }}
        uses: docker/build-push-action@v5
        with:
          context: ./src/generic/python
          file: ./src/generic/python/${{ matrix.version }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          tags: pterodactyl-python:${{ matrix.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [build-java, build-nodejs, build-python]
    if: always()
    steps:
      - name: Check build results
        run: |
          echo "Java Build: ${{ needs.build-java.result }}"
          echo "Node.js Build: ${{ needs.build-nodejs.result }}"
          echo "Python Build: ${{ needs.build-python.result }}"
          if [[ "${{ needs.build-java.result }}" == "success" && \
                "${{ needs.build-nodejs.result }}" == "success" && \
                "${{ needs.build-python.result }}" == "success" ]]; then
            echo "All images built successfully!"
          else
            echo "Some builds failed!"
            exit 1
